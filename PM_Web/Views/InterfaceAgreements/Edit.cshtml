@model PM.Models.ViewModels.InterfaceAgreementViewModel

@{
    ViewData["Title"] = "Edit Interface Agreement";
}

<div class="container">
    <h2 class="text-center mt-4">@ViewData["Title"]</h2>

    <div class="row justify-content-center mt-5">
        <div class="col-md-8">
            <div class="card shadow border-0">
                <div class="card-body p-4">
                    <form asp-action="Edit" method="post" enctype="multipart/form-data" class="row needs-validation" novalidate>
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                        <input type="hidden" asp-for="InterfacePointId" />
                        <input type="hidden" asp-for="Id"/>

                        @if (User.IsInRole("ContractorTeamMember") && ViewBag.isAccountable)
                        {
                            <div class="form-group mb-3 col-md-6">
                                <label asp-for="Title" class="control-label font-weight-bold"></label>
                                <input asp-for="Title" class="form-control form-control-lg" placeholder="Title"/>
                                <span asp-validation-for="Title" class="text-danger"></span>
                            </div>
                            <div class="form-group mb-3 col-md-6">
                                <label asp-for="Description" class="control-label font-weight-bold"></label>
                                <textarea asp-for="Description" class="form-control form-control-lg" placeholder="Description"></textarea>
                                <span asp-validation-for="Description" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3 col-md-6">
                                <label asp-for="NeedDate" class="control-label font-weight-bold"></label>
                                <input asp-for="NeedDate" type="date" class="form-control form-control-lg" placeholder="NeedDate"/>
                                <span asp-validation-for="NeedDate" class="text-danger"></span>
                            </div>
                        }

                        else
                        {
                            <div class="form-group mb-3 col-md-6">
                                <label asp-for="Title" class="control-label font-weight-bold"></label>
                                <input asp-for="Title" readonly class="form-control form-control-lg" placeholder="Title" />
                                <span asp-validation-for="Title"  class="text-danger"></span>
                            </div>
                            <div class="form-group mb-3 col-md-6">
                                <label asp-for="Description" class="control-label font-weight-bold"></label>
                                <textarea asp-for="Description" readonly class="form-control form-control-lg" placeholder="Description"></textarea>
                                <span asp-validation-for="Description" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3 col-md-6">
                                <label asp-for="NeedDate" class="control-label font-weight-bold"></label>
                                <input asp-for="NeedDate" readonly type="date" class="form-control form-control-lg" placeholder="NeedDate" />
                                <span asp-validation-for="NeedDate" class="text-danger"></span>
                            </div>
                        }

                        <div class="form-group mb-3 col-md-6">
                            <label asp-for="CloseDate" class="control-label font-weight-bold"></label>
                            @if (Model.CloseDate.HasValue)
                            {
                                <input asp-for="CloseDate" readonly type="date" class="form-control form-control-lg" />
                            }
                            else
                            {
                                <input asp-for="CloseDate" readonly type="text" class="form-control form-control-lg" />
                            }

                        </div>
                        
                        @if (((User.IsInRole("ContractorTeamMember") || User.IsInRole("Contractor")) && (ViewBag.isAccountable || ViewBag.isConsultant)) || User.IsInRole("Cordinator"))
                        {
                            
                            <div class="form-group mb-3">
                                <label class="form-label">Modified Dates</label>
                                <table  class="table table-bordered">
                                    <thead>
                                    <tr>
                                        <th>Date</th>
                                        <th>Action</th>
                                    </tr>
                                    </thead>
                                    <tbody id="modifiedDatesTable">
                                    @if (Model.ModifiedDates != null && Model.ModifiedDates.Any())
                                    {
                                        for (var i = 0; i < Model.ModifiedDates.Count; i++)
                                        {
                                            <tr>
                                                <td>
                                                    <input readonly type="date" name="ModifiedDates[@i]" value="@Model.ModifiedDates[i].ToString("yyyy-MM-dd")" class="form-control form-control-lg"/>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    </tbody>
                                </table>
                                
                                @if (Model.CloseDate == null)
                                {
                                    <button type="button" class="btn btn-primary" onclick="addModifiedDateRow()">Add Modified Date</button>
                                }
                            </div>
                        }
                        @if (User.IsInRole("ContractorTeamMember") && ViewBag.isAccountable)
                        {
                            <div class="form-group mb-3" id="System2Container">
                                <label asp-for="System1" class="control-label font-weight-bold">System 1</label>
                                <select asp-for="System1" class="form-control form-control-lg">
                                    <option value="">--Select--</option>
                                    @foreach (var item in ViewBag.Systems)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                                <span asp-validation-for="System1" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3" id="System2Container">
                                <label asp-for="System2" class="control-label font-weight-bold">System 2</label>
                                <select asp-for="System2" class="form-control form-control-lg">
                                    <option value="">--Select--</option>
                                    @foreach (var item in ViewBag.Systems)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                                <span asp-validation-for="System2" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3" id="System2Container">
                                <label asp-for="Discipline" class="control-label font-weight-bold">Discipline</label>
                                <select asp-for="Discipline" class="form-control form-control-lg">
                                    <option value="">--Select--</option>
                                    @foreach (var item in ViewBag.ScopePackages ?? new List<ScopePackage>())
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                                <span asp-validation-for="Discipline" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3">
                                <label class="form-label">Documentations</label>
                                <table class="table table-bordered">
                                    <tbody id="documentationTable">
                                    <tr>
                                        <td><input name="Documentations[0].DocumentationFile" type="file" class="form-control form-control-lg"/></td>
                                        <td><input name="Documentations[0].DocumentationDescription" class="form-control form-control-lg" placeholder="Enter description"/></td>
                                        <td><button type="button" class="btn btn-danger" onclick="removeRow(this)">Remove</button></td>
                                    </tr>
                                    </tbody>
                                </table>
                                <button type="button" class="btn btn-primary" onclick="addDocumentationRow()">Add Documentation</button>
                            </div>
                        }
                        else
                        {
                            <div class="form-group mb-3" id="System2Container">
                                <label asp-for="System1" class="control-label font-weight-bold">System</label>
                                <select asp-for="System1" readonly class="form-control form-control-lg">
                                    <option value="">--Select--</option>
                                    @foreach (var item in ViewBag.Systems)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                                <span asp-validation-for="System1" class="text-danger"></span>
                            </div>
                            <div class="form-group mb-3" id="System2Container">
                                <label asp-for="System2" class="control-label font-weight-bold">System</label>
                                <select asp-for="System2" readonly class="form-control form-control-lg">
                                    <option value="">--Select--</option>
                                    @foreach (var item in ViewBag.Systems)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                                <span asp-validation-for="System2" class="text-danger"></span>
                            </div>
                            <div class="form-group mb-3" id="System2Container">
                                <label asp-for="Discipline" class="control-label font-weight-bold">Discipline</label>
                                <select asp-for="Discipline" readonly class="form-control form-control-lg">
                                    <option value="">--Select--</option>
                                    @foreach (var item in ViewBag.ScopePackages ?? new List<ScopePackage>())
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                                <span asp-validation-for="Discipline" class="text-danger"></span>
                            </div>
                        }
                            <div class="form-group">
                                <button type="submit" class="btn btn-success btn-lg">Submit</button>
                            </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>

        document.addEventListener('DOMContentLoaded', function () {
            toggleFields();
        });

        function addDocumentationRow() {
            const table = document.getElementById('documentationTable');
            const rowCount = table.rows.length;
            const row = table.insertRow(rowCount);

            const cell1 = row.insertCell(0);
            const fileInput = document.createElement('input');
            fileInput.type = 'file';
            fileInput.name = `Documentations[${rowCount}].DocumentationFile`;
            fileInput.className = 'form-control form-control-lg';
            cell1.appendChild(fileInput);

            const cell2 = row.insertCell(1);
            const descriptionInput = document.createElement('input');
            descriptionInput.type = 'text';
            descriptionInput.name = `Documentations[${rowCount}].DocumentationDescription`;
            descriptionInput.className = 'form-control form-control-lg';
            descriptionInput.placeholder = 'Enter documentation description';
            cell2.appendChild(descriptionInput);

            const cell3 = row.insertCell(2);
            const removeButton = document.createElement('button');
            removeButton.type = 'button';
            removeButton.className = 'btn btn-danger';
            removeButton.onclick = function () { removeRow(this); };
            removeButton.textContent = 'Remove';
            cell3.appendChild(removeButton);
        }

        function addModifiedDateRow() {
            const table = document.getElementById('modifiedDatesTable');
            const rowCount = table.rows.length;
            const row = table.insertRow(rowCount);

            const cell1 = row.insertCell(0);
            const dateInput = document.createElement('input');
            dateInput.type = 'date';
            dateInput.name = `ModifiedDates[${rowCount}]`;
            dateInput.className = 'form-control form-control-lg';
            cell1.appendChild(dateInput);

            const cell2 = row.insertCell(1);
            const removeButton = document.createElement('button');
            removeButton.type = 'button';
            removeButton.className = 'btn btn-danger';
            removeButton.onclick = function () { removeRow(this); };
            removeButton.textContent = 'Remove';
            cell2.appendChild(removeButton);
        }

        function removeRow(button) {
            const row = button.parentNode.parentNode;
            row.parentNode.removeChild(row);
        }
    </script>
}
