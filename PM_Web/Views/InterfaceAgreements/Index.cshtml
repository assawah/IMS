@model IEnumerable<PM.Models.InterfaceAgreement>

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-center mt-3">Interface Agreement List</h1>

<div class="container mt-4">
    <div class="row mb-3">
        <div class="col">
            <hr />
            <form id="filterForm" asp-action="Index" method="get" class="form-inline">
                <div class="container">
                    <div class="btn-group mb-3 d-block" role="group" aria-label="Status">
                        <button type="button" class="btn btn-outline-primary" data-filter="status" data-value="" onclick="applyFilter('status', '')">All Status</button>
                        <button type="button" class="btn btn-outline-primary" data-filter="status" data-value="Overriding" onclick="applyFilter('status', 'Overriding')">Overriding (@(ViewBag.StatusCounts.ContainsKey("Overriding") ? ViewBag.StatusCounts["Overriding"] : 0))</button>
                        <button type="button" class="btn btn-outline-primary" data-filter="status" data-value="InProgress" onclick="applyFilter('status', 'InProgress')">In Progress (@(ViewBag.StatusCounts.ContainsKey("InProgress") ? ViewBag.StatusCounts["InProgress"] : 0))</button>
                        <button type="button" class="btn btn-outline-primary" data-filter="status" data-value="ClosedToDeadline" onclick="applyFilter('status', 'ClosedToDeadline')">Closed to Deadline (@(ViewBag.StatusCounts.ContainsKey("ClosedToDeadline") ? ViewBag.StatusCounts["ClosedToDeadline"] : 0))</button>
                        <button type="button" class="btn btn-outline-primary" data-filter="status" data-value="Closed" onclick="applyFilter('status', 'Closed')">Closed (@(ViewBag.StatusCounts.ContainsKey("Closed") ? ViewBag.StatusCounts["Closed"] : 0))</button>
                        <button type="button" class="btn btn-outline-primary" data-filter="status" data-value="notissue" onclick="applyFilter('status', 'NotIssued')">Not Issued (@(ViewBag.StatusCounts.ContainsKey("NotIssued") ? ViewBag.StatusCounts["NotIssued"] : 0))</button>
                    </div>
                    @if (User.IsInRole("Contractor") || User.IsInRole("ContractorTeamMember") || User.IsInRole("Cordinator"))
                    {
                        <hr/>
                            <div class="btn-group mb-3 d-block" role="group" aria-label="Role">
                            <button type="button" class="btn btn-outline-primary" data-filter="role" data-value="" onclick="applyFilter('role', '')">All Roles</button>
                            <button type="button" class="btn btn-outline-primary" data-filter="role" data-value="Responsible" onclick="applyFilter('role', 'Responsible')">Responsible (@(ViewBag.ResponsibleCount ?? 0))</button>
                            <button type="button" class="btn btn-outline-primary" data-filter="role" data-value="Accountable" onclick="applyFilter('role', 'Accountable')">Accountable (@(ViewBag.AccountableCount ?? 0))</button>
                            <button type="button" class="btn btn-outline-primary" data-filter="role" data-value="Consultant" onclick="applyFilter('role', 'Consultant')">Consultant (@(ViewBag.ConsultantCount ?? 0))</button>
                            <button type="button" class="btn btn-outline-primary" data-filter="role" data-value="Informed" onclick="applyFilter('role', 'Informed')">Informed (@(ViewBag.InformedCount ?? 0))</button>
                            <button type="button" class="btn btn-outline-primary" data-filter="role" data-value="Supported" onclick="applyFilter('role', 'Supported')">Supported (@(ViewBag.SupportedCount ?? 0))</button>
                        </div>
                    }
                </div>
                @if (User.IsInRole("Cordinator"))
                {
                    <label for="scopePackageFilter" class="mr-2">ScopePackage:</label>
                    <select id="scopePackageFilter" class="form-control mr-3 w-75" onchange="applyFilter('scopePackage', this.value)">
                        <option value="">All ScopePackages</option>
                        @foreach (var item in ViewBag.ScopePackageList)
                        {
                            var isSelected = item == ViewBag.ScopePackageSelected;
                            if (isSelected)
                            {
                                <option value="@item" selected>@item</option>
                            }
                            else
                            {
                                <option value="@item" >@item</option>
                            }
                        }
                    </select>
                }
            </form>
            <hr />
        </div>
    </div>

    <div class="row">
        <div class="col">
            <table id="interfacePointsTable" class="table table-hover table-bordered text-center">
                <thead class="thead-dark">
                    <tr>
                        <th>Interface Agreement</th>
                        <th>Interface Point</th>
                        <th>@Html.DisplayNameFor(model => model.Title)</th>
                        <th>@Html.DisplayNameFor(model => model.Status)</th>
                        <th>Remaining Days</th>
                        @if (User.IsInRole("ContractorTeamMember") || User.IsInRole("Contractor") || User.IsInRole("Cordinator"))
                        {
                            <th>Role</th>
                        }
                        <th width="200px">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>IA_@Html.DisplayFor(modelItem => item.Id)</td>
                            <td>IP_@Html.DisplayFor(modelItem => item.InterfacePointId)</td>
                            <td>@Html.DisplayFor(modelItem => item.Title)</td>
                            <td>@Html.DisplayFor(modelItem => item.Status)</td>
                            <td>
                                @((item.NeedDate - DateTime.Now).Days)
                            </td>
                            @if (User.IsInRole("ContractorTeamMember") || User.IsInRole("Contractor") || User.IsInRole("Cordinator"))
                            {
                                <td>
                                    @if (ViewBag.userInterfaceAgreementsAccountable != null && ViewBag.userInterfaceAgreementsAccountable.Contains(item))
                                    {
                                        <span>
                                            A
                                        </span>
                                    }
                                    @if (ViewBag.userInterfaceAgreementsResponsible != null && ViewBag.userInterfaceAgreementsResponsible.Contains(item))
                                    {
                                        <span>
                                            R
                                        </span>
                                    }
                                    @if (ViewBag.userInterfaceAgreementsConsultant != null && ViewBag.userInterfaceAgreementsConsultant.Contains(item))
                                    {
                                        <span>
                                            C
                                        </span>
                                    }
                                    @if (ViewBag.userInterfaceAgreementsInformed != null && ViewBag.userInterfaceAgreementsInformed.Contains(item))
                                    {
                                        <span>
                                            I
                                        </span>
                                    }
                                    @if (ViewBag.userInterfaceAgreementsSupported != null && ViewBag.userInterfaceAgreementsSupported.Contains(item))
                                    {
                                        <span>
                                            S
                                        </span>
                                    }
                                    @if (ViewBag.userInterfaceAgreementsAccountable == null && ViewBag.userInterfaceAgreementsResponsible == null && ViewBag.userInterfaceAgreementsSupported == null && ViewBag.userInterfaceAgreementsSupported == null && ViewBag.userInterfaceAgreementsSupported == null)
                                    {
                                        <span>
                                            N/A
                                        </span>
                                    }
                                </td>
                            }
                            <td>

                                @if ((User.IsInRole("ContractorTeamMember") || User.IsInRole("Contractor")) && ViewBag.userInterfaceAgreementsConsultant != null && ViewBag.userInterfaceAgreementsConsultant.Contains(item))
                                {
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-dark btn-sm mr-1"><i class="fa fa-edit"></i> Edit</a>
                                }

                                @if (((User.IsInRole("ContractorTeamMember") || User.IsInRole("Contractor")) && ViewBag.userInterfaceAgreementsAccountable != null && ViewBag.userInterfaceAgreementsAccountable.Contains(item)) || User.IsInRole("Cordinator"))
                                {
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-dark btn-sm mr-1"><i class="fa fa-edit"></i> Edit</a>
                                    <form asp-action="Delete" asp-route-id="@item.Id" method="post" class="d-inline-block" onsubmit="return confirm('Are you sure you want to delete this interface Agreement?');">
                                        <button type="submit" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i> Delete</button>
                                    </form>
                                }

                                <a asp-action="ChatsOfInterfaceAgreement" asp-controller="Chats" asp-route-id="@item.Id" class="btn btn-secondary btn-sm mr-1">Chat</a>
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm mr-1"><i class="fa fa-eye"></i> View</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" crossorigin="anonymous"></script>
    <script src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js" crossorigin="anonymous"></script>
    <script src="https://cdn.datatables.net/1.10.21/js/dataTables.bootstrap4.min.js" crossorigin="anonymous"></script>
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>

    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.21/css/dataTables.bootstrap4.min.css" />

    <script>
        $(document).ready(function () {
            $('#interfacePointsTable').DataTable({
                "paging": true,
                "lengthChange": true,
                "searching": true,
                "ordering": true,
                "info": true,
                "autoWidth": false,
                "responsive": true
            });

            applyButtonStyles();

            function applyButtonStyles() {
                const urlParams = new URLSearchParams(window.location.search);
                const filters = ['status', 'role', 'scopePackage'];
                filters.forEach(filter => {
                    const value = urlParams.get(filter);
                    if (value) {
                        $(`button[data-filter="${filter}"]`).removeClass('btn-primary').addClass('btn-outline-primary');
                        $(`button[data-filter="${filter}"][data-value="${value}"]`).removeClass('btn-outline-primary').addClass('btn-primary');
                    }
                });
            }
        });

        function applyFilter(filter, value) {
            const urlParams = new URLSearchParams(window.location.search);
            urlParams.set(filter, value);
            window.location.search = urlParams.toString();
        }
    </script>
}
